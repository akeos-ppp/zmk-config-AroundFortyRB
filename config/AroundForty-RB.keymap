#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE  3
#define SCROLL 4

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp DOLLAR>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(LEFT_PARENTHESIS)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        l {
            bindings = <&kp RPAR>;
            key-positions = <13 14>;
        };

        L_disp {
            bindings = <&kp LA(LC(D))>;
            key-positions = <31 32>;
        };

        c_disp {
            bindings = <&kp LC(LA(F))>;
            key-positions = <32 33>;
        };

        r_disp {
            bindings = <&kp LA(LC(G))>;
            key-positions = <33 34>;
        };

        full_disp {
            bindings = <&kp LA(LC(ENTER))>;
            key-positions = <34 35>;
        };

        reset {
            bindings = <&bootloader>;
            key-positions = <5 6 7 8 4 3 2 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mission: mission {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(UP)>;

            label = "MISSION";
        };

        launchpad: launchpad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(LA(L))>;

            label = "LAUNCHPAD";
        };

        capture: capture {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(LS(N5))>;

            label = "CAPTURE";
        };

        left: left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(D))>;

            label = "LEFT";
        };

        center: center {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(F))>;

            label = "CENTER";
        };

        right: right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(G))>;

            label = "RIGHT";
        };

        left_two: left_two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(E))>;

            label = "LEFT_TWO";
        };

        right_two: right_two {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LC(T))>;

            label = "RIGHT_TWO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R          &kp T                          &kp Y        &kp U       &kp I                     &kp O              &kp P
&kp A             &kp S         &kp D             &kp F          &kp G                          &kp H        &kp J       &kp K                     &kp L              &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V          &kp B        &kp ESC           &kp N        &kp M       &kp COMMA                 &kp PERIOD         &kp SLASH
&kp TAB           &kp LEFT_ALT  &kp LEFT_CONTROL  &kp BACKSPACE  &lt 2 SPACE  &lt 3 LANGUAGE_1  &lt 1 ENTER  &lt 0 SEMI  &mt RIGHT_GUI LANGUAGE_2  &kp DOUBLE_QUOTES  &mt RIGHT_SHIFT EQUAL
            >;
        };

        NUM {
            bindings = <
&trans  &kp N7        &kp N8        &kp N9        &trans             &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp ASTRK          &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans  &kp N0        &trans        &trans        &trans     &trans  &trans            &kp UNDER          &trans          &trans                &kp PIPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&trans  &kp LS(LC(TAB))   &kp UP_ARROW    &kp LC(TAB)        &kp F5           &kp PLUS      &kp MINUS   &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9
&trans  &kp LEFT          &kp DOWN_ARROW  &kp RIGHT          &kp F10          &kp EQUAL     &kp COLON   &kp N4         &kp N5         &kp N6
&trans  &kp LS(LG(LEFT))  &trans          &kp LS(LG(RIGHT))  &trans   &trans  &kp ASTERISK  &kp SLASH   &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3
&trans  &trans            &trans          &trans             &trans   &trans  &kp ENTER     &kp DOLLAR  &kp BACKSPACE  &kp AMPERSAND  &kp N0
            >;
        };

        MOUSE {
            bindings = <
&studio_unlock  &trans  &trans  &trans  &trans          &trans  &trans    &mkp MB3    &trans    &trans
&trans          &trans  &trans  &trans  &trans          &trans  &mkp MB1  &mo 4       &mkp MB2  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &mission  &launchpad  &trans    &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &capture  &trans      &trans    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
